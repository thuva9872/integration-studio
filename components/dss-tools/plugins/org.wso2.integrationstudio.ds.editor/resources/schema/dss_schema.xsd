<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved. 
	* * Licensed under the Apache License, Version 2.0 (the "License"); * you 
	may not use this file except in compliance with the License. * You may obtain 
	a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * 
	* Unless required by applicable law or agreed to in writing, software * distributed 
	under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. * See the License for 
	the specific language governing permissions and * limitations under the License. -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	elementFormDefault="qualified">

	<xs:element name="data" type="Data">
		<xs:annotation>
			<xs:documentation source="description">
				The complete data service
				configuration is enclosed with &lt;data&gt;
				element.
			</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:complexType name="Data">
		<xs:annotation>
			<xs:documentation source="description">
				This complex type denotes
				the top level elements that can be there in a
				&lt;data&gt; tag,
				basically all top level constructs of the data
				service
				configuration
			</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="1" maxOccurs="unbounded">
			<xs:group ref="dataServiceElements" minOccurs="1"
				maxOccurs="unbounded" />
		</xs:sequence>
		<xs:attribute name="baseURI" type="xs:string" />
		<xs:attribute name="name" type="xs:string" />
		<xs:attribute name="enableBatchRequests"
			type="xs:boolean" />
		<xs:attribute name="enableBoxcarring" type="xs:boolean" />
		<xs:attribute name="disableLegacyBoxcarringMode"
			type="xs:boolean" />
		<xs:attribute name="disableStreaming" type="xs:boolean" />
		<xs:attribute name="txManagerJNDIName" type="xs:string" />
		<xs:attribute name="serviceNamespace" type="xs:string" />
		<xs:attribute name="serviceGroup" type="xs:string" />
		<xs:attribute name="publishSwagger" type="xs:string" />
		<xs:attribute name="transports" type="xs:string" />
		<xs:attribute name="serviceStatus" type="activeInactive" />
	</xs:complexType>

	<xs:simpleType name="activeInactive">
		<xs:annotation>
			<xs:documentation source="description">
				This simple type represents
				the possible values for serviceStatus
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="active" />
			<xs:enumeration value="inactive" />
		</xs:restriction>
	</xs:simpleType>

	<xs:group name="dataServiceElements">
		<xs:annotation>
			<xs:documentation source="description">
				This group denotes all the data service elements
			</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="description" minOccurs="0" maxOccurs="1" />
			<xs:element ref="config" minOccurs="0"
				maxOccurs="unbounded" />
			<xs:element ref="query" minOccurs="0"
				maxOccurs="unbounded" />
			<xs:element ref="operation" minOccurs="0"
				maxOccurs="unbounded" />
			<xs:element ref="resource" minOccurs="0"
				maxOccurs="unbounded" />
			<xs:element ref="event-trigger" minOccurs="0"
				maxOccurs="unbounded" />
			<xs:element name="policy" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:attribute name="key" type="xs:string"
						use="required" />
				</xs:complexType>
			</xs:element>
			<xs:element name="enableSec" minOccurs="0" maxOccurs="1" />
			<xs:element ref="authorization_provider" minOccurs="0"
				maxOccurs="1" />
		</xs:choice>
	</xs:group>

	<xs:element name="authorization_provider">
		<xs:annotation>
			<xs:documentation source="description">
				Authorization provider
				configuration
				element of a data service
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="property" minOccurs="0"
					maxOccurs="unbounded">
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="name" type="xs:string" />
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="class" type="xs:string"
				use="required" />
		</xs:complexType>
	</xs:element>

	<xs:element name="property">
		<xs:annotation>
			<xs:documentation source="description">
				This represents the
				property attribute
			</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:sequence minOccurs="0">
				<xs:element name="configuration">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="username" type="xs:string" />
										<xs:element name="password" type="xs:string" />
									</xs:sequence>
									<xs:attribute name="request" type="xs:string"
										use="required" />
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="name" type="xs:string"
				use="required" />
		</xs:complexType>
	</xs:element>

	<xs:element name="param">
		<xs:annotation>
			<xs:documentation source="description">
				This represents the
				parameter element
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:group ref="paramElements" minOccurs="0"
					maxOccurs="unbounded" />
			</xs:sequence>
			<xs:attribute name="name" type="xs:string"
				use="required" />
			<xs:attribute name="sqlType" type="xs:string" />
			<xs:attribute name="paramType" type="scalarArray" />
			<xs:attribute name="type" type="inOut" />
			<xs:attribute name="ordinal" type="xs:integer" />
			<xs:attribute name="defaultValue" type="xs:string" />
			<xs:attribute name="optional" type="xs:boolean" />
			<xs:attribute name="structType" type="xs:string" />
		</xs:complexType>
	</xs:element>

	<xs:group name="paramElements">
		<xs:annotation>
			<xs:documentation source="description">
				This group denotes all the
				param elements
			</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="validateCustom" minOccurs="0"
				maxOccurs="1">
				<xs:complexType>
					<xs:attribute name="class" type="xs:string" />
				</xs:complexType>
			</xs:element>
			<xs:element name="validateLength" minOccurs="0"
				maxOccurs="1">
				<xs:complexType>
					<xs:attribute name="minimum" type="xs:integer" />
					<xs:attribute name="maximum" type="xs:integer" />
				</xs:complexType>
			</xs:element>
			<xs:element name="validatePattern" minOccurs="0"
				maxOccurs="1">
				<xs:complexType>
					<xs:attribute name="pattern" type="xs:string" />
				</xs:complexType>
			</xs:element>
			<xs:element name="validateLongRange" minOccurs="0"
				maxOccurs="1">
				<xs:complexType>
					<xs:attribute name="minimum" type="xs:integer" />
					<xs:attribute name="maximum" type="xs:integer" />
				</xs:complexType>
			</xs:element>
			<xs:element name="validateDoubleRange" minOccurs="0"
				maxOccurs="1">
				<xs:complexType>
					<xs:attribute name="minimum" type="xs:integer" />
					<xs:attribute name="maximum" type="xs:integer" />
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>

	<xs:element name="call-query">
		<xs:annotation>
			<xs:documentation source="description">
				This represents the
				call-query element
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="with-param" minOccurs="0"
					maxOccurs="unbounded">
					<xs:complexType>
						<xs:attribute name="name" type="xs:string"
							use="required" />
						<xs:attribute name="query-param" type="xs:string" />
						<xs:attribute name="column" type="xs:string" />
						<xs:attribute name="param" type="xs:string" />
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="href" type="xs:string"
				use="required" />
			<xs:attribute name="requiredRoles" type="xs:string" />
		</xs:complexType>
	</xs:element>

	<xs:simpleType name="scalarArray">
		<xs:annotation>
			<xs:documentation source="description">
				This simple type represents
				the possible values for
				parameter type
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="scalar" />
			<xs:enumeration value="array" />
			<xs:enumeration value="SCALAR" />
			<xs:enumeration value="ARRAY" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="inOut">
		<xs:annotation>
			<xs:documentation source="description">
				This simple type represents
				the possible values for
				type
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="in" />
			<xs:enumeration value="IN" />
			<xs:enumeration value="out" />
			<xs:enumeration value="OUT" />
			<xs:enumeration value="inout" />
			<xs:enumeration value="INOUT" />
		</xs:restriction>
	</xs:simpleType>

	<xs:element name="config" type="Config">
		<xs:annotation>
			<xs:documentation source="description">
				Data service configuration
				element
			</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:complexType name="Config">
		<xs:annotation>
			<xs:documentation source="description">
				This is the element type
				that represents a data service configuration
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="property" minOccurs="0"
				maxOccurs="unbounded" />
		</xs:sequence>
		<xs:attribute name="id" type="xs:string" use="required" />
		<xs:attribute name="enableOData" type="xs:boolean" />
	</xs:complexType>

	<xs:element name="event-trigger" type="Event-trigger">
		<xs:annotation>
			<xs:documentation source="description">
				Data service event-trigger
				element
			</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:complexType name="Event-trigger">
		<xs:annotation>
			<xs:documentation source="description">
				This is the element type
				that represents an event-trigger in data
				service configuration
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="eventTriggerElements" minOccurs="0"
				maxOccurs="unbounded" />
		</xs:sequence>
		<xs:attribute name="id" type="xs:string" use="required" />
		<xs:attribute name="language" type="xs:string" />
	</xs:complexType>

	<xs:group name="eventTriggerElements">
		<xs:annotation>
			<xs:documentation source="description">
				This group denotes all the event trigger elements
			</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="expression" minOccurs="0" maxOccurs="1" />
			<xs:element name="target-topic" minOccurs="0"
				maxOccurs="1" />
			<xs:element name="subscriptions" minOccurs="0"
				maxOccurs="1">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="subscription" minOccurs="0"
							maxOccurs="1" />
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>

	<xs:element name="operation" type="Operation">
		<xs:annotation>
			<xs:documentation source="description">
				Data service operation
				element
			</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:complexType name="Operation">
		<xs:annotation>
			<xs:documentation source="description">
				This is the element type
				that represents an operation in data service
				configuration
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="operationElements" minOccurs="0"
				maxOccurs="unbounded" />
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required" />
		<xs:attribute name="disableStreaming" type="xs:boolean" />
		<xs:attribute name="returnRequestStatus"
			type="xs:boolean" />
	</xs:complexType>

	<xs:group name="operationElements">
		<xs:annotation>
			<xs:documentation source="description">
				This group denotes all the operation elements
			</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="description" minOccurs="0" maxOccurs="1" />
			<xs:element ref="call-query" minOccurs="0" maxOccurs="1" />
		</xs:choice>
	</xs:group>

	<xs:element name="query" type="Query">
		<xs:annotation>
			<xs:documentation source="description">
				Query element configuration
				element
			</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:complexType name="Query">
		<xs:annotation>
			<xs:documentation source="description">
				This is the element type
				that represents a query in data service
				configuration
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="queryElements" minOccurs="0"
				maxOccurs="unbounded" />
		</xs:sequence>
		<xs:attribute name="id" type="xs:string" use="required" />
		<xs:attribute name="useConfig" type="xs:string" />
		<xs:attribute name="returnGeneratedKeys"
			type="xs:boolean" />
		<xs:attribute name="input-event-trigger" type="xs:string" />
		<xs:attribute name="keyColumns" type="xs:string" />
		<xs:attribute name="returnUpdatedRowCount" type="xs:string" />
	</xs:complexType>

	<xs:group name="queryElements">
		<xs:annotation>
			<xs:documentation source="description">
				This group denotes all the
				query elements
			</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element ref="sql" minOccurs="0" maxOccurs="1" />
			<xs:element ref="expression" minOccurs="0" maxOccurs="1" />
			<xs:element ref="sparql" minOccurs="0" maxOccurs="1" />
			<xs:element name="properties" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation source="description">
						This represents the
						properties element
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="property" minOccurs="1"
							maxOccurs="unbounded" />
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="result" minOccurs="0" maxOccurs="1" />
			<xs:element ref="param" minOccurs="0"
				maxOccurs="unbounded" />
		</xs:choice>
	</xs:group>

	<xs:element name="sql">
		<xs:annotation>
			<xs:documentation source="description">
				This represents the sql
				element
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="dialect" type="xs:string" />
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="expression">
		<xs:annotation>
			<xs:documentation source="description">
				This represents the expression
				element
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="dialect" type="xs:string" />
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="sparql">
		<xs:annotation>
			<xs:documentation source="description">
				This represents the sparql
				element
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string" />
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="result">
		<xs:annotation>
			<xs:documentation source="description">
				This represents the result
				element
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:group ref="resultElements" minOccurs="0"
					maxOccurs="unbounded" />
			</xs:sequence>
			<xs:attribute name="element" type="xs:string" />
			<xs:attribute name="rowName" type="xs:string" />
			<xs:attribute name="defaultNamespace" type="xs:string" />
		</xs:complexType>
	</xs:element>

	<xs:group name="resultElements">
		<xs:annotation>
			<xs:documentation source="description">
				This group denotes all the
				result elements
			</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element ref="element" minOccurs="0"
				maxOccurs="unbounded" />
			<xs:element ref="attribute" minOccurs="0"
				maxOccurs="unbounded" />
			<xs:element ref="call-query" minOccurs="0"
				maxOccurs="unbounded" />
		</xs:choice>
	</xs:group>

	<xs:element name="element">
		<xs:annotation>
			<xs:documentation source="description">
				This represents the element
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:group ref="resultElements" minOccurs="0"
					maxOccurs="unbounded" />
			</xs:sequence>
			<xs:attributeGroup ref="elementAttributes" />
		</xs:complexType>
	</xs:element>

	<xs:element name="attribute">
		<xs:annotation>
			<xs:documentation source="description">
				This represents the
				attribute element
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attributeGroup ref="elementAttributes" />
		</xs:complexType>
	</xs:element>

	<xs:attributeGroup name="elementAttributes">
		<xs:annotation>
			<xs:documentation>
				This group of attributes are mainly used for
				elements and attributes
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="name" type="xs:string" />
		<xs:attribute name="column" type="xs:string" />
		<xs:attribute name="requiredRoles" type="xs:string" />
		<xs:attribute name="export" type="xs:string" />
		<xs:attribute name="exportType" type="scalarArray" />
		<xs:attribute name="xsdType" type="xs:string" />
		<xs:attribute name="namespace" type="xs:string" />
		<xs:attribute name="optional" type="xs:boolean" />
		<xs:attribute name="arrayName" type="xs:string" />
		<xs:attribute name="query-param" type="xs:string" />
	</xs:attributeGroup>

	<xs:element name="resource" type="Resource">
		<xs:annotation>
			<xs:documentation source="description">
				Data service resource
				element
			</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:complexType name="Resource">
		<xs:annotation>
			<xs:documentation source="description">
				This is the element type
				that represents a resource in data service
				configuration
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="description" minOccurs="0" maxOccurs="1" />
			<xs:element ref="call-query" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
		<xs:attribute name="path" type="xs:string" />
		<xs:attribute name="method" type="methods" />
		<xs:attribute name="disableStreaming" type="xs:boolean" />
		<xs:attribute name="returnRequestStatus"
			type="xs:boolean" />
	</xs:complexType>

	<xs:simpleType name="methods">
		<xs:annotation>
			<xs:documentation source="description">
				This simple type represents
				the possible values for http methods
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="GET" />
			<xs:enumeration value="get" />
			<xs:enumeration value="POST" />
			<xs:enumeration value="post" />
			<xs:enumeration value="PUT" />
			<xs:enumeration value="put" />
			<xs:enumeration value="DELETE" />
			<xs:enumeration value="delete" />
		</xs:restriction>
	</xs:simpleType>

</xs:schema>